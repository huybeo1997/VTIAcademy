DROP DATABASE salemanagement;

CREATE DATABASE IF NOT EXISTS Salemanagement;
USE  Salemanagement;

CREATE TABLE IF NOT EXISTS drepartment
(
    drepartmentID 		TINYINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    drepartmentName 	VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS Position
(
	positionID    		TINYINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    postionName 		VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS `Account`
(
	accountID 		TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    Email 			VARCHAR(50) NULL UNIQUE KEY,
    Username 		VARCHAR(50) NOT NULL,
    fullname		NVARCHAR(50) NOT NULL,
    DrepartmentID 	TINYINT UNSIGNED NOT NULL,
    positionID 		TINYINT UNSIGNED NOT NULL,
    createdate		DATE,
FOREIGN KEY ( DrepartmentID ) REFERENCES Drepartment ( DrepartmentID ) ON DELETE CASCADE,
FOREIGN KEY ( positionID ) REFERENCES position ( positionID ) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS `Group`
(
	GroupID 	TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    GroupName	VARCHAR(50) NOT NULL,
    CreatorID	TINYINT NOT NULL,
    CreateDate	DATE
);
DROP TABLE IF EXISTS GroupAccount;

CREATE TABLE IF NOT EXISTS GroupAccount
(
	GroupID		TINYINT UNSIGNED,
    AccountID	TINYINT UNSIGNED NOT NULL,
    JoinDate	DATE,
PRIMARY KEY ( GroupID, AccountID ),
FOREIGN KEY ( AccountID ) REFERENCES `Account` ( AccountID )
);

CREATE TABLE IF NOT EXISTS TypeQuestion
(
	TypeID 		TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    TypeName	ENUM('Essay','Multiple-Choice')
);

CREATE TABLE IF NOT EXISTS CategoryQuestion
(
	CategoryID 		TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    categoryName	VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS Question
(
	questionID		TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    Content			TEXT,
    CategoryID		TINYINT UNSIGNED NOT NULL,
    TypeID			TINYINT UNSIGNED NOT NULL,
    CreatorID		TINYINT NOT NULL,
    CreateDate		DATE NULL,
FOREIGN KEY ( CategoryID ) REFERENCES CategoryQuestion ( CategoryID ) ON DELETE CASCADE,
FOREIGN KEY  ( TypeID ) REFERENCES TypeQuestion ( TypeID ) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Answer
(
	AnswerID		TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    Content			TEXT,
    questionID		TINYINT UNSIGNED NOT NULL,
    isCorrect		ENUM('DUNG','SAI'),
FOREIGN KEY ( questionID ) REFERENCES Question ( QuestionID ) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Exam
(
	ExamID		TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    `Code`		TINYINT UNSIGNED NOT NULL,
    Title		VARCHAR(225) NOT NULL,
    CategoryID	TINYINT UNSIGNED NOT NULL,
    Duration	TIME NOT NULL,
    creatorID	TINYINT UNSIGNED NOT NULL,
    CreateDate	DATE NULL,
FOREIGN KEY ( CategoryID ) REFERENCES CategoryQuestion ( CategoryID ) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Examquestion (
    ExamID 			TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    QuestionID		TINYINT UNSIGNED NOT NULL,
FOREIGN KEY ( QuestionID ) REFERENCES Question ( QuestionID ) ON DELETE CASCADE
);
   